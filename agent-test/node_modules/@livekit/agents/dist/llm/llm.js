// SPDX-FileCopyrightText: 2024 LiveKit, Inc.
//
// SPDX-License-Identifier: Apache-2.0
import { AsyncIterableQueue } from '../utils.js';
export class LLM {
}
export class LLMStream {
    queue = new AsyncIterableQueue();
    closed = false;
    _functionCalls = [];
    #chatCtx;
    #fncCtx;
    constructor(chatCtx, fncCtx) {
        this.#chatCtx = chatCtx;
        this.#fncCtx = fncCtx;
    }
    /** List of called functions from this stream. */
    get functionCalls() {
        return this._functionCalls;
    }
    /** The function context of this stream. */
    get fncCtx() {
        return this.#fncCtx;
    }
    /** The initial chat context of this stream. */
    get chatCtx() {
        return this.#chatCtx;
    }
    /** Execute all deferred functions of this stream concurrently. */
    executeFunctions() {
        this._functionCalls.forEach((f) => (f.task = f.func.execute(f.params).then((result) => ({ name: f.name, toolCallId: f.toolCallId, result }), (error) => ({ name: f.name, toolCallId: f.toolCallId, error }))));
        return this._functionCalls;
    }
    next() {
        return this.queue.next();
    }
    close() {
        this.queue.close();
        this.closed = true;
    }
    [Symbol.asyncIterator]() {
        return this;
    }
}
//# sourceMappingURL=llm.js.map